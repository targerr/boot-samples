server:
  port: 8002
  servlet:
    context-path: /ecommerce-demo

spring:
  application:
    #应用名称
    name: commerce-nacos-client
  cloud:
    nacos:
      # 服务注册发现
      discovery:
        enabled: true # 如果不想使用 Nacos 进行服务注册和发现, 设置为 false 即可
        # Nacos 服务发现与注册配置，其中子属性 server-addr 指定 Nacos 服务器主机和端口
        server-addr: 172.16.200.249:8848
        #server-addr: 127.0.0.1:8848
        # server-addr: 127.0.0.1:8848,127.0.0.1:8849,127.0.0.1:8850
        # 注册到 nacos 的指定 namespace，默认为 public
        namespace: 1cbd4445-e494-4011-bccb-7ac4c094f9d7
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator
          user.name: admin
          user.password: admin
        # Nacos认证信息
        username: nacos
        password: nacos
    # sentinel通信
    sentinel:
      transport:
        # sentinel-dashboard-1.6.0 的访问路径 ，启动方式java -jar sentinel-dashboard-1.6.0.jar
        # java -Dserver.port=8082 -jar sentinel-dashboard-1.6.0.jar   默认8080端口
        # Sentinel 控制台地址
        dashboard: localhost:8080
        # 如果有多套网络，又无法正确获取本机IP，则需要使用下面的参数设置当前机器可被外部访问的IP地址，供admin控制台使用
        # spring.cloud.sentinel.transport.client-ip=
        # 应用服务 WEB 访问端口
        #client-ip: 172.16.22.197
        heartbeat-interval-ms: 500
      # 取消Sentinel控制台懒加载
      # 默认情况下 Sentinel 会在客户端首次调用的时候进行初始化，开始向控制台发送心跳包
      # 配置 sentinel.eager=true 时，取消Sentinel控制台懒加载功能
      eager: true
      #开启基于Sentinel的OpenFeign调用限流熔断
      enabled: true
# 暴露端点
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
feign:
  sentinel:
    enabled: true
  client:
    config:
      # 全局配置(日志)
      default:
        loggerlevel: full

logging:
  level:
    # feign日志以什么级别监控哪个接口
    com.example.rpc.service.TestClient: trace